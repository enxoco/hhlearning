// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Role {
  id             Int    @id @default(autoincrement())
  name           String @default("")
  from_User_role User[] @relation("User_role")
}

model Setting {
  id    Int    @id @default(autoincrement())
  name  String @default("")
  value String @default("")
}

model User {
  id                      Int       @id @default(autoincrement())
  name                    String    @default("")
  email                   String    @unique @default("")
  firstName               String    @default("")
  lastName                String    @default("")
  street                  String    @default("")
  city                    String    @default("")
  state                   String    @default("")
  phone                   String?
  phoneMother             String?
  phoneFather             String?
  zipcode                 String    @default("")
  role                    Role[]    @relation("User_role")
  isAdmin                 Boolean   @default(false)
  isParent                Boolean   @default(false)
  hasPaidTuition          Boolean   @default(false)
  password                String
  courses                 Course[]  @relation("Course_teacher")
  student                 Student[] @relation("Student_parent")
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
  magicAuthToken          String?
  magicAuthIssuedAt       DateTime?
  magicAuthRedeemedAt     DateTime?
}

model Student {
  id        Int      @id @default(autoincrement())
  parent    User?    @relation("Student_parent", fields: [parentId], references: [id])
  parentId  Int?     @map("parent")
  isFormer  Boolean  @default(false)
  firstName String   @default("")
  lastName  String   @default("")
  courses   Course[] @relation("Course_student")

  @@index([parentId])
}

model Course {
  id        Int      @id @default(autoincrement())
  name      String   @default("")
  grade     String?
  feedback  String   @default("")
  student   Student? @relation("Course_student", fields: [studentId], references: [id])
  studentId Int?     @map("student")
  teacher   User?    @relation("Course_teacher", fields: [teacherId], references: [id])
  teacherId Int?     @map("teacher")

  @@index([studentId])
  @@index([teacherId])
}

model Semester {
  id                              Int                 @id @default(autoincrement())
  name                            String              @default("")
  from_ReportCardSetting_semester ReportCardSetting[] @relation("ReportCardSetting_semester")
}

model ReportCardSetting {
  id         Int       @id @default(autoincrement())
  title      String    @default("")
  address    String    @default("")
  semester   Semester? @relation("ReportCardSetting_semester", fields: [semesterId], references: [id])
  semesterId Int?      @map("semester")

  @@index([semesterId])
}