
image: node:16
stages:
  # - test_build_backend
  - deploy_backend
cache:
  paths:
    - node_modules/
    - backend/node_modules
    - frontend/node_modules

# Verify that our backend server will build properly
# build_backend:
#   stage: test_build_backend
#     # Map our environment variables.
#   variables:
#     PORT: PORT
#     SESSION_SECRET: SESSION_SECRET
#     DOMAIN: https://portal.hhlearning.com
#     DB_CONNECTION_STRING: DB_CONNECTION_STRING
#     NODE_ENV: production
#     MAIL_FROM_ADDRESS: MAIL_FROM_ADDRESS
#     MAIL_FROM_DOMAIN: hhlearning.com
#     POSTMARK_API_KEY: POSTMARK_API_KEY
#     REACT_APP_SALT: REACT_APP_SALT
#     REACT_APP_SALT_LENGTH: REACT_APP_SALT_LENGTH
#     ADMIN_TOKEN: ADMIN_TOKEN
#   script:
#     - |
#       cd backend
#       yarn
#       SESSION_SECRET=$SESSION_SECRET yarn build

deploy_backend:
  stage: deploy_backend
  before_script:
    - apt-get -y update
    - apt-get -y install openssh-server
    - cd ~
    - mkdir -m 0700 ~/.ssh
    - ssh-keyscan -H tn.enxo.co -p 8202 > ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
    - cat $PRIVATE_KEY_FILE > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "Starting deploy"
    - |
      ssh murph@$SSH_HOST -p $SSH_PORT 'bash -s' < $CI_PROJECT_DIR/deploy.sh
      echo "Deployment successful"