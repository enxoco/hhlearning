ARG NODE_IMAGE=node:16.13.1-alpine

FROM $NODE_IMAGE AS base
RUN apk --no-cache add dumb-init
RUN mkdir -p /home/node/app && chown node:node /home/node/app
WORKDIR /home/node/app
USER node
RUN mkdir tmp

FROM base AS dependencies
COPY --chown=node:node ./frontend/package.json ./
COPY --chown=node:node ./frontend/yarn.lock ./
RUN yarn --frozen-lockfile
COPY --chown=node:node ./frontend .

FROM dependencies AS build
RUN yarn build


# FROM trafex/php-nginx as prod
FROM trafex/php-nginx as prod
# Copy our React build files
# Install composer from the official image
COPY --from=build /home/node/app/dist /var/www/html/
COPY --from=composer /usr/bin/composer /usr/bin/composer

USER root
# Run composer install to install the dependencies
WORKDIR /var/www/html

COPY ./frontend-php/composer.* .
COPY ./frontend-php .
# COPY ./frontend-php/composer.lock /var/www/html/
# USER root
# RUN mkdir /var/www/html/parents

# RUN mkdir -p /var/www/html/archived-reports
# RUN chown -R nobody:nobody /var/www/html/archived-reports
RUN apk add --no-cache php81-pdo php81-pdo_pgsql php81-bcmath php81-gd php81-iconv

RUN composer install --optimize-autoloader --no-interaction --no-progress
# COPY ./vendor /var/www/html/vendor
USER nobody
